from facebook_business.adobjects.adaccount import AdAccount

from facebookads.adobjects.adsinsights import AdsInsights

from facebookads.api import FacebookAdsApi

from facebookads.session import FacebookSession

from datetime import datetime, timedelta

import csv

access_token = 'EA###'

ad_account_id = 'act_######' 
 
app_secret = 'r4ak#####'

app_id = '4598#####'

print (access_token)
from facebook_business.api import FacebookAdsApi
from facebook_business.adobjects.adaccount import AdAccount

my_app_id = app_id
my_app_secret = app_secret
my_access_token = '####'
FacebookAdsApi.init(my_app_id, my_app_secret, my_access_token)
my_account = AdAccount('act_####')
campaigns = my_account.get_campaigns()
print(campaigns)


N = 1

date_N_days_ago = datetime.now() - timedelta(days=N)
#date_N_days_ago = '2019-03-10'

print(datetime.now())
print(date_N_days_ago)

account = AdAccount(ad_account_id)
insights = account.get_insights(fields=[
    AdsInsights.Field.ad_id,
    AdsInsights.Field.ad_name,
    AdsInsights.Field.adset_id,
    AdsInsights.Field.adset_name,
    AdsInsights.Field.campaign_id,
    AdsInsights.Field.campaign_name,
    AdsInsights.Field.clicks,
    AdsInsights.Field.ctr,
    AdsInsights.Field.reach,
    AdsInsights.Field.impressions,
    AdsInsights.Field.spend, 
    AdsInsights.Field.objective
], params={
    'level': AdsInsights.Level.ad,
    'breakdowns': ['region'],
    'time_range': {'since':'2019-03-07','until': date_N_days_ago.strftime('%Y-%m-%d')},
    #'time_range': {'since':'2019-03-07','until': date_N_days_ago},
    
    'time_increment': 1
            }
)
print (insights)

type(insights)

async_job = account.get_insights_async(fields = fields, params=params)  
i_async_job = account.get_insights(params={'level': 'ad'}, is_async=True)
# Insights
while True:
    job = i_async_job.remote_read()
    print("Percent done: " + str(job[AsyncJob.Field.async_percent_completion]))
    time.sleep(1)
    if job:
        print("Done!")
        break

print(i_async_job.get_result())

from facebookads.adobjects.adaccount import AdAccount

account = AdAccount('######')
async_job = account.get_insights_async(fields = fields, params=params)  

from facebookads.adobjects.adaccount import AdAccount

def get_insights(self, fields=fields, params=params, async=True, batch=None, pending=False)
job = AdAccount("############").get_insights_async(params=params)
result_cursor = wait_for_async_job(job)
results = [item for item in result_cursor]

def wait_for_async_job(job):
    for _ in range(TIMEOUT):
        time.sleep(1)
        job = job.remote_read()
        status = job[AdReportRun.Field.async_status]
        if status == "Job Completed":
            return job.get_result(params={"limit": 1000})
            
            
results= list(insights)

print(results)

type(results)

import pandas as pd   

df = pd.DataFrame(results)
df.to_csv('python_filename.csv', index=False)

print(df)

import pandas as pd   
import snowflake.connector
    
df = pd.DataFrame(results)

df.to_csv('python_filename', index=False)

conn = snowflake.connector.connect(user='abc',password='pwd@123',account='account456',role='READ_ONLY',warehouse='WH1',database='DB')
        sql_statement = "INSERT INTO FACEBOOK_TABLE VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"
        cur = conn.cursor()
        cur.executemany(sql_statement,[(row['CAMPAIGN_ID'], row['row['CALL_DATE'], row['SOURCE'], row['INDEX'])])
        conn.commit()
        cur.close()
        conn.close()

        
campaign_id,campaign_name,objective,adset_id,adset_name,ad_id,ad_name,impressions,reach,clicks,ctr,spend
            
